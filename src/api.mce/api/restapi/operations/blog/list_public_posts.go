// Code generated by go-swagger; DO NOT EDIT.

package blog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListPublicPostsHandlerFunc turns a function with the right signature into a list public posts handler
type ListPublicPostsHandlerFunc func(ListPublicPostsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListPublicPostsHandlerFunc) Handle(params ListPublicPostsParams) middleware.Responder {
	return fn(params)
}

// ListPublicPostsHandler interface for that can handle valid list public posts params
type ListPublicPostsHandler interface {
	Handle(ListPublicPostsParams) middleware.Responder
}

// NewListPublicPosts creates a new http.Handler for the list public posts operation
func NewListPublicPosts(ctx *middleware.Context, handler ListPublicPostsHandler) *ListPublicPosts {
	return &ListPublicPosts{Context: ctx, Handler: handler}
}

/*ListPublicPosts swagger:route GET /posts blog listPublicPosts

list **public** posts by cursor

Term `public` means permission=PUBLIC and status=PUBLISHED


*/
type ListPublicPosts struct {
	Context *middleware.Context
	Handler ListPublicPostsHandler
}

func (o *ListPublicPosts) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListPublicPostsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

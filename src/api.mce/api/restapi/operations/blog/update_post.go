// Code generated by go-swagger; DO NOT EDIT.

package blog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdatePostHandlerFunc turns a function with the right signature into a update post handler
type UpdatePostHandlerFunc func(UpdatePostParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdatePostHandlerFunc) Handle(params UpdatePostParams) middleware.Responder {
	return fn(params)
}

// UpdatePostHandler interface for that can handle valid update post params
type UpdatePostHandler interface {
	Handle(UpdatePostParams) middleware.Responder
}

// NewUpdatePost creates a new http.Handler for the update post operation
func NewUpdatePost(ctx *middleware.Context, handler UpdatePostHandler) *UpdatePost {
	return &UpdatePost{Context: ctx, Handler: handler}
}

/*UpdatePost swagger:route PATCH /admin/posts/{id} blog updatePost

update one post

*/
type UpdatePost struct {
	Context *middleware.Context
	Handler UpdatePostHandler
}

func (o *UpdatePost) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdatePostParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreatePostPayload create post payload
// swagger:model CreatePostPayload
type CreatePostPayload struct {

	// content
	Content string `json:"content,omitempty"`

	// permission
	// Enum: [PUBLIC PRIVATE]
	Permission string `json:"permission,omitempty"`

	// status
	// Enum: [PUBLISHED DRAFTED REMOVED]
	Status string `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this create post payload
func (m *CreatePostPayload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePermission(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createPostPayloadTypePermissionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PUBLIC","PRIVATE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createPostPayloadTypePermissionPropEnum = append(createPostPayloadTypePermissionPropEnum, v)
	}
}

const (

	// CreatePostPayloadPermissionPUBLIC captures enum value "PUBLIC"
	CreatePostPayloadPermissionPUBLIC string = "PUBLIC"

	// CreatePostPayloadPermissionPRIVATE captures enum value "PRIVATE"
	CreatePostPayloadPermissionPRIVATE string = "PRIVATE"
)

// prop value enum
func (m *CreatePostPayload) validatePermissionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, createPostPayloadTypePermissionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CreatePostPayload) validatePermission(formats strfmt.Registry) error {

	if swag.IsZero(m.Permission) { // not required
		return nil
	}

	// value enum
	if err := m.validatePermissionEnum("permission", "body", m.Permission); err != nil {
		return err
	}

	return nil
}

var createPostPayloadTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PUBLISHED","DRAFTED","REMOVED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createPostPayloadTypeStatusPropEnum = append(createPostPayloadTypeStatusPropEnum, v)
	}
}

const (

	// CreatePostPayloadStatusPUBLISHED captures enum value "PUBLISHED"
	CreatePostPayloadStatusPUBLISHED string = "PUBLISHED"

	// CreatePostPayloadStatusDRAFTED captures enum value "DRAFTED"
	CreatePostPayloadStatusDRAFTED string = "DRAFTED"

	// CreatePostPayloadStatusREMOVED captures enum value "REMOVED"
	CreatePostPayloadStatusREMOVED string = "REMOVED"
)

// prop value enum
func (m *CreatePostPayload) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, createPostPayloadTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CreatePostPayload) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreatePostPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreatePostPayload) UnmarshalBinary(b []byte) error {
	var res CreatePostPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
